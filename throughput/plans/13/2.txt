BEGIN;
BEGIN
EXPLAIN
select
	s_acctbal,
	s_name,
	n_name,
	p_partkey,
	p_mfgr,
	s_address,
	s_phone,
	s_comment
from
	part,
	supplier,
	partsupp,
	nation,
	region
where
	p_partkey = ps_partkey
	and s_suppkey = ps_suppkey
	and p_size = 20
	and p_type like '%TIN'
	and s_nationkey = n_nationkey
	and n_regionkey = r_regionkey
	and r_name = 'ASIA'
	and ps_supplycost = (
		select
			min(ps_supplycost)
		from
			partsupp,
			supplier,
			nation,
			region
		where
			p_partkey = ps_partkey
			and s_suppkey = ps_suppkey
			and s_nationkey = n_nationkey
			and n_regionkey = r_regionkey
			and r_name = 'ASIA'
	)
order by
	s_acctbal desc,
	n_name,
	s_name,
	p_partkey
LIMIT 100;
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=111152876.69..111152876.69 rows=1 width=191)
   ->  Sort  (cost=111152876.69..111152876.69 rows=1 width=191)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=5321149.36..111152876.68 rows=1 width=191)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using pk_part on part  (cost=0.44..1024580.84 rows=81172 width=30)
                     Filter: (((p_type)::text ~~ '%TIN'::text) AND (p_size = 20))
               ->  Materialize  (cost=5321146.45..5398688.24 rows=15508357 width=169)
                     ->  Sort  (cost=5321146.45..5359917.34 rows=15508357 width=169)
                           Sort Key: partsupp.ps_partkey
                           ->  Nested Loop  (cost=2.13..2143764.31 rows=15508357 width=169)
                                 ->  Nested Loop  (cost=1.56..58048.62 rows=200000 width=165)
                                       Join Filter: (nation.n_regionkey = region.r_regionkey)
                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                             Filter: (r_name = 'ASIA'::bpchar)
                                       ->  Hash Join  (cost=1.56..45547.56 rows=1000000 width=169)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..31796.00 rows=1000000 width=143)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=34)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                 ->  Index Scan using partsupp_ps_suppkey_idx on partsupp  (cost=0.57..9.65 rows=78 width=12)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
               SubPlan 1
                 ->  Aggregate  (cost=1663.26..1663.27 rows=1 width=4)
                       ->  Hash Join  (cost=1661.41..1663.18 rows=32 width=4)
                             Hash Cond: (nation_1.n_nationkey = supplier_1.s_nationkey)
                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                   Hash Cond: (nation_1.n_regionkey = region_1.r_regionkey)
                                   ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8)
                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                         ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4)
                                               Filter: (r_name = 'ASIA'::bpchar)
                             ->  Hash  (cost=1658.37..1658.37 rows=158 width=8)
                                   ->  Nested Loop  (cost=0.99..1658.37 rows=158 width=8)
                                         ->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.57..296.61 rows=163 width=8)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using pk_supplier on supplier supplier_1  (cost=0.42..8.34 rows=1 width=8)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
(39 rows)

COMMIT;
COMMIT
